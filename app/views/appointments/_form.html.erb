<%= form_for(@appointment) do |f| %>
  <% if @appointment.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@appointment.errors.count, "erro") %> impediram este agendamento de ser salvo:</h2>

      <ul>
      <% @appointment.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <fieldset>
    <legend ><%= Client.model_name.human %></legend>
    <% if @appointment.new_record? %>

      <%= f.fields_for :client, @appointment.client do |client_fields| %>
        <div class="form-group">
          <%= client_fields.label :name %>
          <%= client_fields.text_field :name, :class => 'form-control', :autocomplete => :off %>
        </div>
        <div class="form-group">
          <%= client_fields.label :email %>
          <%= client_fields.text_field :email, :class => 'form-control' %>
        </div>
        <div class="form-group">
          <%= client_fields.label :phone %>
          <%= client_fields.text_field :phone, :class => 'form-control' %>
        </div>

        <%= f.hidden_field(:client_id) %>

      <% end %>

    <% elsif @appointment.client.nil? %>
      Anônimo

    <% else %>
      <dl>
        <dt>Nome</dt>
        <dd><%= @appointment.client.name%></dd>
      </dl>
      <dl>
        <dt>Email</dt>
        <dd><%= @appointment.client.email%></dd>
      </dl>
      <dl>
        <dt>Telefone</dt>
        <dd><%= @appointment.client.phone%></dd>
      </dl>

    <% end %>
  </fieldset>

  <fieldset>
    <legend ><%= CompaniesService.model_name.human %></legend>

    <div class="form-group">
      <%= f.label(:companies_service_id) %>
      <%= f.select :companies_service_id, current_user.company.companies_services.collect {|copanies_service| [copanies_service.service_name, copanies_service.id]}, {:prompt => 'Selecione um serviço'}, class: 'form-control' %>
    </div>

    <div class="form-group">
      <%= f.label(:resource_id) %>
      <%= f.select :resource_id, current_user.company.resources.collect { |resource| [resource.name, resource.id] }, {:prompt => 'Selecione um funcionário'}, class: 'form-control' %>
    </div>
    <div class="form-group">
      <%= f.label :start %><br>
      <%= f.datetime_select :start, {default: params['start'].blank? ? @appointment.start : DateTime.parse(params['start'])} %>
    </div>
    <div class="form-group">
      <%= f.label :duration %><br>
      <%= f.select :duration, options_for_select([
                                                     ["10 min", 600],
                                                     ["20 min", 1200],
                                                     ["30 min", 1800],
                                                     ["40 min", 2400],
                                                     ["50 min", 3000],
                                                     ["1h", 3600],
                                                     ["1h20m", 4800]

                                                 ], selected: @appointment.duration

      ) %>
    </div>



    <div class="form-group">
      <%= f.label :obs %><br>
      <%= f.text_area :obs, class: 'form-control' %>
    </div>
  </fieldset>

  <div class="actions">
    <%= f.submit :class => 'btn btn-primary' %>
    <%= link_to 'Excluir', @appointment, :class => 'btn btn-danger', :role => 'button', method: :delete, data: {confirm: 'Are you sure?'} unless @appointment.new_record? %>
  </div>
<% end %>

<script type="text/javascript">
    $(function() {

        // Below is the name of the textfield that will be autocomplete
        $('#appointment_client_attributes_name').autocomplete({
            // This shows the min length of charcters that must be typed before the autocomplete looks for a match.
            minLength: 2,
            // This is the source of the auocomplete suggestions. In this case a list of names from the people controller, in JSON format.
            source: '<%= findByName_clients_path(:json) %>',
            // This updates the textfield when you move the updown the suggestions list, with your keyboard. In our case it will reflect the same value that you see in the suggestions which is the person.given_name.
            focus: function(event, ui) {
                // $(this).val(ui.item.name);
                return false;
            },
            // Once a value in the drop down list is selected, do the following:
            select: function(event, ui) {
                $(this).val(ui.item.name);
                $('#appointment_client_attributes_email').val(ui.item.email)
                $('#appointment_client_attributes_phone').val(ui.item.phone)
                $('#appointment_client_id').val(ui.item.id)

                $('#appointment_companies_service_id').focus();
                return false;
            }
        }).autocomplete( "instance" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .append( "<div>" + item.name + " - " + item.email + "</div>" )
                .appendTo( ul );
        };

    });
</script>